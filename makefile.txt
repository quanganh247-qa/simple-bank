postgres:
	docker run --name postgres --network bank-network -e POSTGRES_USER=root -e POSTGRES_PASSWORD=secret -p 5433:5432 -d postgres

createdb:
	docker exec -it postgres createdb --username=root --owner=root simple_bank

dropdb:	
	docker exec -it postgres dropdb simple_bank

migrateup:
	migrate -path db/migration -database "postgres://root:secret@localhost:5433/simple_bank?sslmode=disable" -verbose up

migratedown:
	migrate -path db/migration -database "postgres://root:secret@localhost:5433/simple_bank?sslmode=disable" -verbose down

migrateup1:
	migrate -path db/migration -database "postgresql://root:secret@localhost:5433/simple_bank?sslmode=disable"  -verbose up 1

migratedown1:
	migrate -path db/migration -database "postgresql://root:secret@localhost:543/simple_bank?sslmode=disable"  -verbose down 1
sqlc:
	sqlc generate

test:
	go test -v -cover ./... 

server:
	go run main.go

mock:
	mockgen -package mockdb -destination db/mock/store.go tutorial.sqlc.dev/app/db/sqlc Store

.PHONY: postgres createdb dropdb migrateup migratedown  migrateup1 migratedown1 sqlc test server mock



create TOKEN_SYMMETRIC_KEY :  openssl rand -hex 64 | head -c 32

connect aws secretsmanager:  aws secretsmanager get-secret-value --secret-id simple_bank

export SecretString tp JSON : aws secretsmanager get-secret-value --secret-id simple_bank --query SecretString --output text

install library convert JSON to app.env : 
aws secretsmanager get-secret-value --secret-id simple_bank --query SecretString --output text | jq -r 'to_entries|map("\(.key)=\(.value)")|.[]'>app.env

login into ecr aws 
 aws ecr get-login-password | docker login --username AWS --password-stdin 439868168242.dkr.ecr.us-east-1.amazonaws.com/simplebank

docker pull image:
docker pull  439868168242.dkr.ecr.us-east-1.amazonaws.com/simplebank:41ddcadcbf152c5fa34056b8ea2b9b8159d27ef1